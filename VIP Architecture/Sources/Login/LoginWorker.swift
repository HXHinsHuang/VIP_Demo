//
//  LoginWorker.swift
//  VIP Architecture
//
//  Created by haoxian on 2018/4/19.
//  Copyright (c) 2018å¹´ haoxian. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

typealias reponseHandler = (_ reponse: Login.LoginEvent.Response) -> ()

class LoginNetworkWorker {
  func fetch(account: String, password: String, complete: @escaping reponseHandler) {
    Network.apiManager.loginFetch(account: account, password: password) { (jsonData) in
      let decoder = JSONDecoder()
      do {
        let reponse = try decoder.decode(Login.LoginEvent.Response.self, from: jsonData)
        complete(reponse)
      } catch {
        print(error)
      }
    }
  }
}

class LoginDatabaseWorker {
  
  func saveUserInfo(_ reponse: Login.LoginEvent.Response) {
    if let user = reponse.user {
      DataBase.manager.saveUserInfo(user)
    }
  }
  
  func fetchUserInfoFromDatabase(with userId: String) -> User {
    guard let user = DataBase.manager.getUserInfo(with: userId) else { fatalError() }
    return user
  }
}
